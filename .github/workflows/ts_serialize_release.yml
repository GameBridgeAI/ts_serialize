# Copyright 2018-2021 Gamebridge.ai authors. All rights reserved. MIT license.

name: release

on:
  push:
    tags: "v*.*.*"

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        deno: ["v1.x"]
        os: [macOS-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Setup repo
        uses: actions/checkout@v2

      - name: Setup Deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno }}
      
      - name: Deno Format Check
        run: deno fmt --check
        if: matrix.os != 'windows-latest'

      - name: Cache Dependencies
        run: deno cache test_deps.ts

      - name: Run Deno Tests with coverage
        run: deno test --coverage=coverage --unstable

      - name: lcov test coverage
        run: deno coverage --unstable coverage --lcov > coverage.lcov
        if: matrix.os == 'ubuntu-latest'

      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v1
        with:
          coverage-files: coverage.lcov
          minimum-coverage: 100
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.os == 'ubuntu-latest'

      - name: Run package.json Generation Tests
        run: .github/workflows/scripts/npm_release_files/create_npm_package_file_test.sh

  build:
    name: Release
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        deno: ["v1.x"]

    steps:
      - name: Get github tag
        id: get_github_tag
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Setup repo
        uses: actions/checkout@v2

      - name: Setup deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno }}

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/

      - name: Build and test NPM module
        run: .github/workflows/scripts/build.sh ${{ steps.get_github_tag.outputs.VERSION }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Deploy to NPM
        run: |
          cd dist
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}