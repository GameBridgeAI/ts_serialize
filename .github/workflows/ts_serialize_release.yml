name: release
on:
  push:
    tags:
      - "v*"

jobs:
  test:
    name: ts serialize tests
    runs-on: ubuntu-latest
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      - name: run tests
        run: |
          curl -L https://deno.land/x/install/install.sh | sh -s "v1.0.5"
          export PATH="$HOME/.deno/bin:$PATH"
          deno fmt --check
          deno test -c tsconfig.json
  build:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: |
          curl -L https://deno.land/x/install/install.sh | sh -s "v1.0.5"
          export PATH="$HOME/.deno/bin:$PATH"
          mkdir dist
          deno bundle -c tsconfig.json mod.ts dist/index.js
          cp *.md dist
          cp LICENSE dist
          cd dist
          tar -zcf ts_serialize.tar.gz *
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/ts_serialize.tar.gz
          asset_name: package.tar.gz
          asset_content_type: application/gzip
